name: release

on:
  push:
    # run only against tags
    tags:
      - '*'

permissions:
  contents: write
  # packages: write
  # issues: write

jobs:
  goreleaser:
    # macOS notarization toolchain works only on macOS
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Fetch all tags
        run: git fetch --force --tags
      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: 1.25.3
      #
      # Uncomment the following lines if you want to use macOS notarization
      # ---------------------------------------------------------------
      #
      # I have commented out the following lines because I don't have a
      # paid Apple Developer account anymore.
      # 
      # Since I'm probably the only one who will ever use this, I'm not
      # goint to spend $99/year until I have a good reason to do so.
      #
      # - name: Install gon for code signing and notarization
      #   run: |
      #     wget -q https://github.com/mitchellh/gon/releases/download/v0.2.5/gon_macos.zip -O /tmp/gon_macos.zip
      #     unzip /tmp/gon_macos.zip -d /usr/local/bin          
      # - name: Set up keychain for macOS code-signing and notarization
      #   env:
      #     KEYCHAIN_PATH: "/tmp/apple-developer.keychain-db"
      #   run: |
      #     echo "${{ secrets.KEYCHAIN_CONTENT }}" | base64 --decode > ${{ env.KEYCHAIN_PATH }}
      #     security default-keychain -s ${{ env.KEYCHAIN_PATH }}
      #     security unlock-keychain -p "${{ secrets.KEYCHAIN_PASSWORD }}" "${{ env.KEYCHAIN_PATH }}"
      #     git status
      
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          # either 'goreleaser' (default) or 'goreleaser-pro'
          distribution: goreleaser
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Your GoReleaser Pro key, if you are using the 'goreleaser-pro' distribution
          # GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
          AC_USERNAME: ${{ secrets.AC_USERNAME }}
          AC_PASSWORD: ${{ secrets.AC_PASSWORD }}
