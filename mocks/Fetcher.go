// Code generated by mockery v2.42.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	spaggiari "github.com/zmoog/classeviva/adapters/spaggiari"
)

// Fetcher is an autogenerated mock type for the Fetcher type
type Fetcher struct {
	mock.Mock
}

// Fetch provides a mock function with given fields:
func (_m *Fetcher) Fetch() (spaggiari.Identity, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Fetch")
	}

	var r0 spaggiari.Identity
	var r1 error
	if rf, ok := ret.Get(0).(func() (spaggiari.Identity, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() spaggiari.Identity); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(spaggiari.Identity)
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewFetcher creates a new instance of Fetcher. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewFetcher(t interface {
	mock.TestingT
	Cleanup(func())
}) *Fetcher {
	mock := &Fetcher{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
